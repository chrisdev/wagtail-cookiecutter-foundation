{% raw %}---
# This Playbook based on https://certbot.eff.org 2017-11-06
- name: add pyton software properites
  apt: name=software-properties-common state=latest update_cache=yes cache_valid_time=3600
  become: yes
  become_user: root
  tags:
    - le
    - ssl

- name: install the letsencrypt apt package
  apt:
    name: python3-certbot-nginx
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  become: yes
  become_user: root
  tags:
      - le
      - ssl

- name: create the letsencrypt config dir
  become: yes
  become_user: root
  file: path=/etc/letsencrypt
        state=directory
        mode=755
  when: use_ssl|bool
  tags:
      - le
      - ssl

- name: Check to see if the Cert has already been generated
  become: yes
  become_user: root
  stat:
    path: "/etc/letsencrypt/live/{{ django_env.HOST_NAME }}/fullchain.pem"
  register: cert_stat
  tags:
      - le
      - ssl
      - test_me

- name: upload le-cli standalone config
  become: yes
  become_user: root
  template: src=le-cli.j2
            dest=/etc/letsencrypt/cli.ini
            backup=yes

  when: use_ssl|bool and not cert_stat.stat.exists
  tags:
      - le
      - ssl

- name: stop nginx service
  service: name=nginx state=stopped
  become: yes
  become_user: root
  tags:
      - le

- name: Generate CSR, Sign and Download using letsencrypt apt package
  become: yes
  become_user: root
  command: certbot  certonly --agree-tos
  tags:
      - le
      - ssl

- name: Generate stronger DHE parameters
  become: yes
  become_user: root
  command: openssl dhparam -out dhparam.pem 2048
  args:
    chdir: /etc/letsencrypt/live/{{ django_env.HOST_NAME }}/
    creates: "/etc/letsencrypt/live/{{ django_env.HOST_NAME }}/dhparam.pem"
  when: use_ssl|bool
  tags:
      - le
      - ssl

- name: Remove the domains in le-cli to allow the renew command to run
  lineinfile: dest=/etc/letsencrypt/cli.ini
              regexp='^domains'
              line="#domains = {{ django_env.HOST_NAME }}, www.{{django_env.HOST_NAME}}"
  become: yes
  become_user: root
  when: use_ssl|bool
  tags:
      - le
      - ssl

- name: Dry run using letencrypt package
  command: certbot renew --dry-run --agree-tos
  become: yes
  register: autorenew
  become_user: root
  when: use_ssl|bool and cert_stat.stat.exists == True
  tags:
      - le
      - ssl

- name: stop nginx service
  service: name=nginx state=started
  become: yes
  become_user: root
  tags:
      - le {% endraw %}
